diff --git a/lib/php5redis/Php5Redis.php b/lib/php5redis/Php5Redis.php
--- a/lib/php5redis/Php5Redis.php
+++ b/lib/php5redis/Php5Redis.php
@@ -6,16 +6,20 @@ class Php5Redis {
 	private $_sock;
 	public $debug=false;
 	
 	function __construct($host='localhost', $port = 6379) {
 		$this->host = $host;
 		$this->port = $port;
 	}
 	
+	function __destruct() {
+		$this->disconnect();
+	}
+
 	private function connect() {
 		if ($this->_sock)
 			return;
 		if ($sock = fsockopen ( $this->host, $this->port, $errno, $errstr )) {
 			$this->_sock = $sock;
 			$this->debug('Connected');
 			return;
 		}
@@ -75,27 +79,30 @@ class Php5Redis {
 				}
 				return $res;
 				break;
 			default :
 				throw new Php5RedisException ( 'Unknown responce line: ' . $s );
 				break;
 		}
 	}
-	private function cmd($command) {
+	private function cmd($command, $readResp = true) {
 		$this->debug('Command: '.$command);
 		$this->connect ();
 		$s = $command . "\r\n";
 		while ( $s ) {
 			$i = fwrite ( $this->_sock, $s );
 			if ($i == 0)
 				break;
 			$s = substr ( $s, $i );
 		}
-		return $this->cmdResponse ();
+		if ($readResp)
+			return $this->cmdResponse ();
+		else
+			return '';
 	}
 	function disconnect() {
 		if ($this->_sock)
 			@fclose ( $this->_sock );
 		$this->_sock = null;
 	}
 	
 	////////////////////////////////
@@ -105,17 +112,18 @@ class Php5Redis {
 	/**
 	 * close the connection
 	 * 
 	 * Ask the server to silently close the connection. 
 	 * 
 	 * @return void The connection is closed as soon as the QUIT command is received. 
 	 */
 	function quit() {
-		return $this->cmd ( 'QUIT' );
+		$this->cmd ( 'QUIT', false );
+		$this->_sock = null;
 	}
 	
 	/**
 	 * simple password authentication if enabled
 	 * 
 	 * Request for authentication in a password protected Redis server. A Redis server 
 	 * can be instructed to require a password before to allow clients to issue commands. 
 	 * This is done using the requirepass directive in the Redis configuration file. 
