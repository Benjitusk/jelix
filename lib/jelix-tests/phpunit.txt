
phpunit


--colors



****************************************** bootstrap
--bootstrap

<phpunit bootstrap=""

    testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
    testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"

    >


***************************************** process isolation
--process-isolation

<phpunit processIsolation="false">

@runTestsInSeparateProcesses
@runInSeparateProcess




*************************************** Dependences

@depends testmethod


*************************************** Data provider

@dataProvider method

method -> Iterator ou tableau d'arguments à donner à la methode de test


*************************************** exceptions
@expectedException InvalidArgumentException


*************************************** assertions

$this->assertXXXX()


*************************************** protections variables
<phpunit backupGlobals="true"
    backupStaticAttributes="false">
    

 @backupGlobals
 @backupStaticAttributes
 
 protected $backupGlobalsBlacklist = array('globalVariable');
 protected $backupStaticAttributesBlacklist = array(
      'className' => array('attributeName')
    );

*************************************** skip test
    protected function setUp() {
        if (!extension_loaded('mysqli')) {
            $this->markTestSkipped('The MySQLi extension is not available.');
        }
    }

*************************************** coverage
--coverage-html ./reports
--coverage-clover

@codeCoverageIgnore

// @codeCoverageIgnoreStart
print '*';
// @codeCoverageIgnoreEnd


<filter>
  <blacklist>
    <directory suffix=".php">/path/to/files</directory>
    <file>/path/to/file</file>
    <exclude>
      <directory suffix=".php">/path/to/files</directory>
      <file>/path/to/file</file>
    </exclude>
  </blacklist>
  <whitelist>
    <directory suffix=".php">/path/to/files</directory>
    <file>/path/to/file</file>
    <exclude>
      <directory suffix=".php">/path/to/files</directory>
      <file>/path/to/file</file>
    </exclude>
  </whitelist>
</filter>


<logging>
  <log type="coverage-html" target="/tmp/report" charset="UTF-8"
       yui="true" highlight="false"
       lowUpperBound="35" highLowerBound="70"/>
  <log type="coverage-clover" target="/tmp/coverage.xml"/>
</logging>

******************************************* log

--log-junit
<logging>
  <log type="junit" target="/tmp/logfile.xml" logIncompleteSkipped="false"/>
</logging>
